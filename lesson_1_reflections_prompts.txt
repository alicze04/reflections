1. How did viewing a diff between two versions of a file help you see the bug that was introduced?

Comparing line by line instead of reading the whole document from the top to the bottom. Easier to spot a mistake when comparing two similar lines of code.

2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

To be able to come back to the previous version if we wanted to. When we break something in the new version we can come back to the old version easily. To see the progreess we have made since we have started writing the code. 

3. How can you use the commands git log and git diff to view the history of files?

We can use 'git log' command to see what changes have been introduced. We can see the history of the project and any logical changes we have commited. We can use'Git diff'(commits ID's) to find a file where a bug was introduced.

4. How might using version control make you more confident to make changes that could break something?

You can always go back to a previous version of your projects by checking out any commits and reverse any changes you don't want to keep. You can always go back to any stage of your project.

5. Now that you have your workspace set up, what do you want to try using Git for?

To save any changes I made to my projects and break them up into logical parts. To be able to come back to them any time I want. To be able to find a bug in code if it appears.

6. What happens when you initialize a repository? Why do you need to do it?

You need to initialize a repository for GIT to start tracking your files and for you to be able to make commits with logical changes to the project.

7. How is the staging area different from the working directory and the repository? What value do you think it offers?

You can add any changes to the staging area and keep them there until you are sure you want to commit them.






